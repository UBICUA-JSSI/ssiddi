openapi: 3.0.0
info:
  title: SSIDDI Data Model
  description: SSIDDI Data Model
  version: 1.0.0
  
servers:
  - url: http://82.223.203.200:3001/
    description: SSIDDI Test Server
    
tags:
  - name: SSIDDI Data Model
    description: SSIDDI Data Model

paths:
  /metadata:
    get:
      summary: Get the model version
      responses:
        '200':
          description: The model version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metadata'
            application/xml:
              schema:
                $ref: '#/components/schemas/metadata'                
  /organisations:
    get:
      summary: Get SSIDDI organisations by filters
      parameters:
      - in: query
        name: filter
        description: a wildcard parameter
        schema:
          type: string          
      responses:
        '200':
          description: all organisations filtered by wildcard parameter 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisations' 
            application/xml:
              schema:             
                $ref: '#/components/schemas/organisations'                    
  /organisation/{uuid}:
    get:
      summary: Get an organisation by uuid
      parameters:
      - in: path
        name: uuid
        description: organisation uuid
        required: true
        schema:
          type: string
      - in: query
        name: lang
        description: language parameter (en as default)
        schema:
          type: string          
      responses:
        '200':
          description: a single organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation'
            application/xml:
              schema:
                $ref: '#/components/schemas/organisation'                 
  /service/{uuid}:
    get:
      summary: Get a service by uuid
      parameters:
      - in: path
        name: uuid
        description: Service Id
        required: true
        schema:
          type: string
      - in: query
        name: lang
        description: Language parameter (en as default)
        schema:
          type: string          
      responses:
        '200':
          description: A single service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/service'
            application/xml:
              schema:
                $ref: '#/components/schemas/service'                
  /interface/{uuid}:
    get:
      summary: Get a service interface by uuid
      parameters:
      - in: path
        name: uuid
        description: Service Id
        required: true
        schema:
          type: string         
      responses:
        '200':
          description: A service interface
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interface'
            application/xml:
              schema:
                $ref: '#/components/schemas/interface'                  
                
components:
  schemas:
    model:
      type: object
      xml:
        prefix: ssiddi
      required:
      - metadata
      - organisations      
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        organisations:
          $ref: '#/components/schemas/organisations'
    metadata:      
      type: object
      xml:
        prefix: ssiddi
        name: metadata
      properties:
        name:
          type: string
          example: ssiddi      
        version:
          type: string
          example: v1.0
    organisations:
      type: array
      items:
        $ref: '#/components/schemas/organisation'      
      xml:
        prefix: ssiddi
        name: organisations
        wrapped: true    
    organisation:
      type: object
      xml:
        prefix: ssiddi
        name: organisation
        wrapped: true
      required:
      - uuid
      - name
      - services
      properties:
        uuid:
          type: string
          format: uuid
          example: 12345678-abcd-1234-efgh-ab12345678cd
        name:
          type: string
          example: Example University
        category:
          type: array        
          items:
            $ref: '#/components/schemas/reference'
          xml:
            wrapped: true            
        services:
          type: array        
          items:
            $ref: '#/components/schemas/service'
          xml:
            wrapped: true            
    reference:
      type: object
      xml:
        name: reference
      properties:
        key:
          type: string
          example: http://dd.eionet.europa.eu/vocabulary/eurostat/nace_r2/
          xml:
            attribute: true
        name:
          type: string
          example: Higher education     
          xml:
            attribute: true
        value:
          type: string
          example: P854    
          xml:
            attribute: true
      required:
        - key
        - value     
    service:
      type: object
      xml:
        prefix: ssiddi
        name: service
      required:
      - uuid
      - description
      - accreditation
      properties:
        uuid:
          type: string
          format: uuid          
          example: 12345678-abcd-1234-efgh-ab12345678ef
        status:
          type: string
          example: available
        description:
          xml:
            wrapped: true        
          $ref: '#/components/schemas/dictionary'
        policy:
          $ref: '#/components/schemas/policy'
        accreditation:
          $ref: '#/components/schemas/accreditation'
        subsribers:
          type: array
          xml:
            wrapped: true
          items:        
            $ref: '#/components/schemas/reference'
        interfaces:
          type: array         
          items:
            $ref: '#/components/schemas/interface'
        signature:
          $ref: '#/components/schemas/signature'
    policy:
      type: object
      xml:
        prefix: ssiddi
        name: policy
      required:
        - name
        - description
        - decisionPoint
      properties:
        name:
          type: string
          example: Credential policy
        description:
          $ref: '#/components/schemas/dictionary'
          xml:
            wrapped: true
        decisionPoint:
          type: string
          example: https://example-university.org
    dictionary:
      type: object
      xml:
        name: text
        attribute: true
      additionalProperties:
        type: string
      example:
        en: Hello
        es: Hola
    accreditation:
      type: object
      xml:
        name: accreditation
      required:
      - accreditor
      properties:
        accreditor:
          type: string
          example: "did:sov:12345678abcdefg"
        createdAt:
          type: string
          format: date-time
          example: 2021-07-21T18:05:02Z
        expirationDate:
          type: string
          format: date-time
          example: 2022-07-21T18:05:02Z
    signature:
      type: object
      xml:
        name: signature
      properties:
        created:
          type: string
          format: date-time
          example: 2021-06-21T18:05:02Z
        text:
          type: string
          example: abc...123=
        type:
          type: string
          example: EidasSeal2021
        verificationMethod:
          type: string
          example: did:sov:234567890abcdefg
    interface:
      type: object
      xml:
        prefix: ssiddi
        name: interface
      properties:
        uuid:
          type: string
          format: uuid
          example: 12345678-abcd-1234-efgh-ab12345678gh
        did:
          type: string
          example: "did:sov:12345678abcdefg"          
          
